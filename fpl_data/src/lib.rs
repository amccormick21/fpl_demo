pub mod fpl_data {
    use serde::{Deserialize, Serialize};

    #[derive(Serialize, Deserialize, Debug)]
    pub struct FplApiTeam {
        pub id: u64,
        pub code: u64,
        pub name: String,
        pub short_name: String,
        pub pulse_id: u32,
        pub strength: u32,
        pub played: u32,
        pub win: u32,
        pub draw: u32,
        pub loss: u32,
        pub points: u32,
        pub position: u32,
        pub strength_overall_home: u32,
        pub strength_overall_away: u32,
        pub strength_attack_home: u32,
        pub strength_attack_away: u32,
        pub strength_defence_home: u32,
        pub strength_defence_away: u32,
    }

    #[derive(Serialize, Deserialize, Debug)]
    pub struct FplApiPlayer {
        pub chance_of_playing_next_round: Option<u32>,
        pub chance_of_playing_this_round: Option<u32>,
        pub code: u32,
        pub cost_change_event: i32,
        pub cost_change_event_fall: i32,
        pub cost_change_start: i32,
        pub cost_change_start_fall: i32,
        pub dreamteam_count: u32,
        pub element_type: u32,
        pub ep_next: String,
        pub ep_this: String,
        pub event_points: i32,
        pub first_name: String,
        pub form: String,
        pub id: u32,
        pub in_dreamteam: bool,
        pub news: String,
        pub news_added: Option<String>,
        pub now_cost: u32,
        pub photo: String,
        pub points_per_game: String,
        pub second_name: String,
        pub selected_by_percent: String,
        pub special: bool,
        pub squad_number: Option<u32>,
        pub status: String,
        pub team: u32,
        pub team_code: u32,
        pub total_points: i32,
        pub transfers_in: u32,
        pub transfers_in_event: u32,
        pub transfers_out: u32,
        pub transfers_out_event: u32,
        pub value_form: String,
        pub value_season: String,
        pub web_name: String,
        pub minutes: u32,
        pub goals_scored: u32,
        pub assists: u32,
        pub clean_sheets: u32,
        pub goals_conceded: u32,
        pub own_goals: u32,
        pub penalties_saved: u32,
        pub penalties_missed: u32,
        pub yellow_cards: u32,
        pub red_cards: u32,
        pub saves: u32,
        pub bonus: u32,
        pub bps: i32,
        pub influence: String,
        pub creativity: String,
        pub threat: String,
        pub ict_index: String,
        pub starts: u32,
        pub expected_goals: String,
        pub expected_assists: String,
        pub expected_goal_involvements: String,
        pub expected_goals_conceded: String,
        pub influence_rank: u32,
        pub influence_rank_type: u32,
        pub creativity_rank: u32,
        pub creativity_rank_type: u32,
        pub threat_rank: u32,
        pub threat_rank_type: u32,
        pub ict_index_rank: u32,
        pub ict_index_rank_type: u32,
        pub corners_and_indirect_freekicks_order: Option<u32>,
        pub corners_and_indirect_freekicks_text: String,
        pub direct_freekicks_order: Option<u32>,
        pub direct_freekicks_text: String,
        pub penalties_order: Option<u32>,
        pub penalties_text: String,
        pub expected_goals_per_90: f64,
        pub saves_per_90: f64,
        pub expected_assists_per_90: f64,
        pub expected_goal_involvements_per_90: f64,
        pub expected_goals_conceded_per_90: f64,
        pub goals_conceded_per_90: f64,
        pub now_cost_rank: u32,
        pub now_cost_rank_type: u32,
        pub form_rank: u32,
        pub form_rank_type: u32,
        pub points_per_game_rank: u32,
        pub points_per_game_rank_type: u32,
        pub selected_rank: u32,
        pub selected_rank_type: u32,
        pub starts_per_90: f64,
        pub clean_sheets_per_90: f64,
    }

    #[derive(Serialize, Deserialize, Debug)]
    pub struct FplApiPosition {
        pub id: u32,
        pub plural_name: String,
        pub plural_name_short: String,
        pub singular_name: String,
        pub singular_name_short: String,
        pub squad_select: u32,
        pub squad_min_play: u32,
        pub squad_max_play: u32,
        pub ui_shirt_specific: bool,
        pub sub_positions_locked: Vec<u32>,
        pub element_count: u32,
    }
}

#[cfg(test)]
mod tests {
    use super::*;
}
